{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers/isValid.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","isValidUrl","url","test","TextField","name","value","isValid","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","trim","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isValidImgUrl","isValidImdbUrl","isSubmitDisabled","onSubmit","preventDefault","state","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1d272a5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export const isValidUrl = (url: string) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  isValid?: boolean,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  isValid = true,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    onChange(event.target.value.trim());\n    setToched(true);\n  };\n\n  const hasError = (touched && required && !value)\n    || (touched && required && !isValid);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">\n          {isValid\n            ? `${label} is required`\n            : 'Invalid url'}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { isValidUrl } from '../../helpers/isValid';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const isValidImgUrl = isValidUrl(imgUrl);\n  const isValidImdbUrl = isValidUrl(imdbUrl);\n\n  const isSubmitDisabled = (\n    !title.trim()\n    || !imdbId.trim()\n    || !imgUrl.trim()\n    || !imdbUrl.trim()\n    || !isValidImgUrl\n    || !isValidImdbUrl\n  );\n\n  const clearFields = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const addMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n    setCount(state => state + 1);\n    clearFields();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={addMovie}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        isValid={isValidImgUrl}\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        isValid={isValidImdbUrl}\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie): void => {\n    setMovies(state => [\n      ...state,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}